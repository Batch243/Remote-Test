[33mcommit 23794a5d957a704f933965cdc82928cea95dd9d8[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Batch243 <bta243@stern.nyu.edu>
Date:   Mon Jun 11 18:44:21 2018 -0400

    Version 1

[1mdiff --git a/groceries.py b/groceries.py[m
[1mnew file mode 100644[m
[1mindex 0000000..a4937d1[m
[1m--- /dev/null[m
[1m+++ b/groceries.py[m
[36m@@ -0,0 +1,75 @@[m
[32m+[m[32mproducts = [[m
[32m+[m[32m    {"id":1, "name": "Chocolate Sandwich Cookies", "department": "snacks", "aisle": "cookies cakes", "price": 3.50},[m
[32m+[m[32m    {"id":2, "name": "All-Seasons Salt", "department": "pantry", "aisle": "spices seasonings", "price": 4.99},[m
[32m+[m[32m    {"id":3, "name": "Robust Golden Unsweetened Oolong Tea", "department": "beverages", "aisle": "tea", "price": 2.49},[m
[32m+[m[32m    {"id":4, "name": "Smart Ones Classic Favorites Mini Rigatoni With Vodka Cream Sauce", "department": "frozen", "aisle": "frozen meals", "price": 6.99},[m
[32m+[m[32m    {"id":5, "name": "Green Chile Anytime Sauce", "department": "pantry", "aisle": "marinades meat preparation", "price": 7.99},[m
[32m+[m[32m    {"id":6, "name": "Dry Nose Oil", "department": "personal care", "aisle": "cold flu allergy", "price": 21.99},[m
[32m+[m[32m    {"id":7, "name": "Pure Coconut Water With Orange", "department": "beverages", "aisle": "juice nectars", "price": 3.50},[m
[32m+[m[32m    {"id":8, "name": "Cut Russet Potatoes Steam N' Mash", "department": "frozen", "aisle": "frozen produce", "price": 4.25},[m
[32m+[m[32m    {"id":9, "name": "Light Strawberry Blueberry Yogurt", "department": "dairy eggs", "aisle": "yogurt", "price": 6.50},[m
[32m+[m[32m    {"id":10, "name": "Sparkling Orange Juice & Prickly Pear Beverage", "department": "beverages", "aisle": "water seltzer sparkling water", "price": 2.99},[m
[32m+[m[32m    {"id":11, "name": "Peach Mango Juice", "department": "beverages", "aisle": "refrigerated", "price": 1.99},[m
[32m+[m[32m    {"id":12, "name": "Chocolate Fudge Layer Cake", "department": "frozen", "aisle": "frozen dessert", "price": 18.50},[m
[32m+[m[32m    {"id":13, "name": "Saline Nasal Mist", "department": "personal care", "aisle": "cold flu allergy", "price": 16.00},[m
[32m+[m[32m    {"id":14, "name": "Fresh Scent Dishwasher Cleaner", "department": "household", "aisle": "dish detergents", "price": 4.99},[m
[32m+[m[32m    {"id":15, "name": "Overnight Diapers Size 6", "department": "babies", "aisle": "diapers wipes", "price": 25.50},[m
[32m+[m[32m    {"id":16, "name": "Mint Chocolate Flavored Syrup", "department": "snacks", "aisle": "ice cream toppings", "price": 4.50},[m
[32m+[m[32m    {"id":17, "name": "Rendered Duck Fat", "department": "meat seafood", "aisle": "poultry counter", "price": 9.99},[m
[32m+[m[32m    {"id":18, "name": "Pizza for One Suprema Frozen Pizza", "department": "frozen", "aisle": "frozen pizza", "price": 12.50},[m
[32m+[m[32m    {"id":19, "name": "Gluten Free Quinoa Three Cheese & Mushroom Blend", "department": "dry goods pasta", "aisle": "grains rice dried goods", "price": 3.99},[m
[32m+[m[32m    {"id":20, "name": "Pomegranate Cranberry & Aloe Vera Enrich Drink", "department": "beverages", "aisle": "juice nectars", "price": 4.25}[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32m#TITLE[m
[32m+[m[32mproduct_count_message = "THERE ARE " + str(len(products)) + " PRODUCTS:"[m
[32m+[m[32mprint("-------------")[m
[32m+[m[32mprint(product_count_message)[m
[32m+[m[32mprint("-------------")[m
[32m+[m
[32m+[m[32m# FUNCTIONS[m
[32m+[m[32mdef sort_by_name(product):[m
[32m+[m[32m    return product ["name"][m
[32m+[m[32mdef sort_by_price(product):[m
[32m+[m[32m    return product ["price"][m
[32m+[m[32mdef sort_by_department(product):[m
[32m+[m[32m    return product ["department"][m
[32m+[m
[32m+[m[32m# SORT PRODUCTS[m
[32m+[m[32mproducts = sorted(products, key=sort_by_name)[m
[32m+[m
[32m+[m[32m#PRINTING NAMES AND PRICES[m
[32m+[m[32m#for product in products:[m
[32m+[m[32m    #price = ' (${0:.2f})'.format(product ["price"])[m
[32m+[m[32m    #print(" + " + product["name"] + price)[m
[32m+[m
[32m+[m[32m#CREATING THE DEPARTMENT LIST - REMOVE DUPES AND SORT[m
[32m+[m[32mdepartments = [][m
[32m+[m[32mfor p in products:[m
[32m+[m[32m    departments.append(p["department"])[m
[32m+[m[32mdepartments = set(departments)[m
[32m+[m[32mdepartments = list(departments)[m
[32m+[m[32mdepartments = sorted(departments)[m
[32m+[m
[32m+[m[32m#PRINT DEPARTMENT TITLE[m
[32m+[m[32m#department_count_message = "THERE ARE " + str(len(departments)) + " DEPARTMENTS:"[m
[32m+[m[32m#print("-------------")[m
[32m+[m[32m#print(department_count_message)[m
[32m+[m[32m#print("-------------")[m
[32m+[m
[32m+[m[32m#FUNCTION TO LOOKUP PRODUCTS BELONGING TO AN APARTMENT[m
[32m+[m[32mdef products_in_departments(dept_name):[m
[32m+[m[32m    new_products = [][m
[32m+[m[32m    for p in products:[m
[32m+[m[32m        if p["department"] == dept_name:[m
[32m+[m[32m            new_products.append(p)[m
[32m+[m[32m    return new_products[m
[32m+[m[32m# or can use return [p for p in products if p["department"] == dept_name][m
[32m+[m
[32m+[m[32m# PRINT DEPARTMENTS AND CAPITALIZE[m
[32m+[m[32m#for d in departments:[m
[32m+[m[32m    #associated_products = products_in_departments(d)[m
[32m+[m[32m    #label = "products"[m
[32m+[m[32m    #if len(associated_products) == 1:[m
[32m+[m[32m    #    label = "product"[m
[32m+[m[32m#    print(" + " + d.title() + " (" + str(len(associated_products)) + " " + label + ")")[m
[1mdiff --git a/shopping_cart.py b/shopping_cart.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
